

int	hard_anal(t_tab *tab)
{
	int i;
	int j;

	i = 0;
	j = 0;
	while (i < tab->lst_size)
	{
		j = 0;
		while (j < tab->lst_len)
		{
			if (tab->array.arr[i][j] == 32)
			{
				if (i != 0 && !(tab->array.arr[i - 1][j] == '1' || tab->array.arr[i - 1][j] == ' ' || tab->array.arr[i - 1][j] == '\0'))
					return (-1);
				if ((i != 0 && j != tab->lst_len) && !(tab->array.arr[i - 1][j + 1] == '1' || tab->array.arr[i - 1][j + 1] == ' ' || tab->array.arr[i - 1][j + 1] == '\0'))
					return (-1);
				if (j != tab->lst_len && !(tab->array.arr[i][j + 1] == '1' || tab->array.arr[i][j + 1] == ' ' || tab->array.arr[i][j + 1] == '\0'))
					return (-1);
				if ((i != tab->lst_size - 1 && j != tab->lst_len) && !(tab->array.arr[i + 1][j + 1] == '1' || tab->array.arr[i + 1][j + 1] == ' ' || tab->array.arr[i + 1][j + 1] == '\0'))
					return (-1);
				if (i != tab->lst_size - 1 && !(tab->array.arr[i + 1][j] == '1' || tab->array.arr[i + 1][j] == ' ' || tab->array.arr[i + 1][j] == '\0'))
					return (-1);
				if (i != tab->lst_size -1  && j != 0 && !(tab->array.arr[i + 1][j - 1] == '1' || tab->array.arr[i + 1][j - 1] == ' ' || tab->array.arr[i + 1][j - 1] == '\0'))
					return (-1);
				if (j != 0 && !(tab->array.arr[i][j - 1] == '1' || tab->array.arr[i][j - 1] == ' ' ||tab->array.arr[i][j - 1] == '\0'))
					return (-1);
				if ((j != 0 && i != 0) && !(tab->array.arr[i - 1][j - 1] == '1' || tab->array.arr[i - 1][j - 1] == ' ' || tab->array.arr[i - 1][j - 1] == '\0'))
					return (-1);
			}
			j++;
		}
		i++;
	}
	return (1);
}